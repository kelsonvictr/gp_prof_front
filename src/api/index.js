// src/api/index.js

import axios from 'axios'

// Cria uma inst√¢ncia do Axios com a URL base da API.
// Voc√™ pode alternar entre o servidor local ou o servidor hospedado (como o Render).

 //üëâ Exemplo com API hospedada no Render:
 const instance = axios.create({
   baseURL: 'https://gp-prof-api.onrender.com'
 })

// üëâ Exemplo com API local (ideal para desenvolvimento local):
//const instance = axios.create({
//  baseURL: 'http://localhost:8080'
//})

/**
 * ‚ÄúInterceptor √© como um ‚Äòporteiro‚Äô que intercepta todas as requisi√ß√µes que o front envia para o backend. Se voc√™ tiver um token, ele automaticamente coloca esse token no cabe√ßalho da requisi√ß√£o. Isso evita que a gente tenha que escrever esse c√≥digo manualmente toda vez.‚Äù
 * INTERCEPTOR DE REQUISI√á√ÉO
 * 
 * Antes de qualquer requisi√ß√£o ser enviada para o backend,
 * esse interceptor √© executado automaticamente.
 * 
 * Aqui, estamos pegando o token salvo no localStorage (caso exista)
 * e adicionando ele no cabe√ßalho da requisi√ß√£o (Authorization).
 * 
 * Isso √© essencial para acessar rotas protegidas no backend com seguran√ßa.
 */
instance.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token') // Recupera o token salvo
    if (token) {
      config.headers.Authorization = `Bearer ${token}` // Adiciona o token no header
    }
    return config // Retorna a configura√ß√£o modificada da requisi√ß√£o
  },
  (error) => Promise.reject(error) // Caso haja erro ao configurar a requisi√ß√£o
)

export default instance
